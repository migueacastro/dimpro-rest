import { Selection } from 'd3';
import { ChartModel } from '../../model/model';
import { Service } from '../service';
export interface Dimensions {
    height: number;
    width: number;
}
export interface getSVGElementSizeOptions {
    useAttrs?: boolean;
    useClientDimensions?: boolean;
    useBBox?: boolean;
    useBoundingRect?: boolean;
}
export declare class DOMUtils extends Service {
    private chartID;
    constructor(model: ChartModel, services: any);
    static getHTMLElementSize(element: HTMLElement): {
        width: number;
        height: number;
    };
    static getSVGElementSize(svgSelector: Selection<SVGGraphicsElement, any, Element, any>, options?: getSVGElementSizeOptions): {
        width: number;
        height: number;
    };
    static appendOrSelect(parent: Selection<SVGElement | HTMLDivElement, any, Element, any>, query: string): Selection<any, any, Element, any>;
    protected mainContainer: HTMLDivElement;
    protected width: string;
    protected height: string;
    init(): void;
    getChartID(): string;
    getElementOffset(element: HTMLElement, byViewPort?: boolean): {
        left: number;
        top: number;
    };
    generateElementIDString(originalID: string | number): string;
    private initializeID;
    addMainContainer(): void;
    update(): void;
    styleHolderElement(): void;
    getHolder(): any;
    exportToJPG(): void;
    exportToPNG(): void;
    isFullScreenMode(): boolean;
    toggleFullscreen(): void;
    handleFullscreenChange(): void;
    setSVGMaxHeight(): void;
    getMainContainer(): HTMLDivElement;
    addHolderListeners(): void;
    addResizeListener(): void;
}
